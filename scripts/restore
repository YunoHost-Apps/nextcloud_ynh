#!/bin/bash

source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression "Restoring the app main directory..."

ynh_restore "$install_dir"

#=================================================
# RESTORE THE MYSQL DATABASE
#=================================================
ynh_script_progression "Restoring the MySQL database..."

ynh_mysql_db_shell < ./db.sql

#=================================================
# RESTORE THE PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression "Reconfiguring PHP-FPM..."

# Restore the file first, so it can have a backup if different
ynh_restore "/etc/php/$php_version/fpm/pool.d/$app.conf"

# Recreate a dedicated PHP-FPM config
ynh_config_add_phpfpm

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore "/etc/nginx/conf.d/$domain.d/$app.conf"
ynh_restore "/etc/nginx/conf.d/$domain.d/$app.d"

# Check if .well-known is available for this domain
if is_url_handled --domain="$domain" --path="/.well-known/caldav" || is_url_handled --domain="$domain" --path="/.well-known/carddav"
then
    ynh_print_warn "Another app already uses the domain $domain to serve a CalDAV/CardDAV feature. You may encounter issues when dealing with your calendar or address book."

    # Remove lines about .well-known/CardDAV and CalDAV with sed.
    sed --in-place --regexp-extended '/location = \/\.well\-known\/(caldav|carddav)/d' "/etc/nginx/conf.d/$domain.d/$app.conf"
fi

#=================================================
# RESTORE THE CRON FILE
#=================================================
ynh_script_progression "Restoring cron job..."

ynh_restore "/etc/cron.d/$app"

#=================================================
# RESTORE LOGS
#=================================================

ynh_restore "/var/log/$app"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================
ynh_script_progression "Restoring the logrotate configuration..."

ynh_restore "/etc/logrotate.d/$app"

#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================
ynh_script_progression "Restoring data directory..."

ynh_restore "$data_dir"

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Fix app ownerships & permissions
chown -R $app:www-data "$install_dir"
chown -R $app: "$data_dir"
find $install_dir/ -type f -print0 | xargs -r0 chmod 0644
find $install_dir/ -type d -print0 | xargs -r0 chmod 0755
find $data_dir/data/ -type f -print0 | xargs -r0 chmod 0640
find $data_dir/data/ -type d -print0 | xargs -r0 chmod 0750
chmod 600 "$install_dir/config/config.php"
chmod 755 /home/yunohost.app
chmod 750 $install_dir

# Iterate over users to extend their home folder permissions - for the external
# storage plugin usage - and create relevant Nextcloud directories
for u in $(ynh_user_list); do
    mkdir -p "$data_dir/$u"
    setfacl --modify g:$app:rwx "/home/$u" || true
done

#=================================================
# YUNOHOST MULTIMEDIA INTEGRATION
#=================================================
ynh_script_progression "Adding multimedia directories..."

# Build YunoHost multimedia directories
ynh_multimedia_build_main_dir
# Allow nextcloud to write into these directories
ynh_multimedia_addaccess $app

#=================================================
# RESTORE THE FAIL2BAN CONFIGURATION
#=================================================
ynh_script_progression "Restoring the Fail2Ban configuration..."

ynh_restore "/etc/fail2ban/jail.d/$app.conf"
ynh_restore "/etc/fail2ban/filter.d/$app.conf"

# Make sure a log file exists (mostly for CI tests)
logfile="/var/log/$app/nextcloud.log"
if [ ! -f "$logfile" ]; then
	touch "$logfile"
	chown "$app:" "$logfile"
fi

ynh_systemctl --action=restart --service=fail2ban

#=================================================
# RESTORE THE NOTIFY_PUSH APP
#=================================================

if [ $enable_notify_push -eq 1 ]
then
    ynh_restore "/etc/systemd/system/${app}-notify-push.service"
    ynh_restore "/etc/systemd/system/${app}-notify-push-watcher.service"
    ynh_restore "/etc/systemd/system/${app}-notify-push-watcher.path"

    systemctl enable --now "${app}-notify-push-watcher.service" --quiet
    systemctl enable --now "${app}-notify-push-watcher.path" --quiet
    systemctl enable --now "${app}-notify-push.service" --quiet
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression "Reloading NGINX web server..."

ynh_systemctl --service=nginx --action=reload

#=================================================
# CHECK IF NOTIFY_PUSH WORKS
#=================================================

if [ $enable_notify_push -eq 1 ]
then
    count=0
    while ! ynh_exec_as_app php${php_version} --define apc.enable_cli=1 $install_dir/cron.php && [[ $count -lt 30 ]]
    do
        sleep 1
        count=$((count + 1))
    done

    ynh_systemctl --service="${app}-notify-push-watcher" --action=restart
    ynh_systemctl --service="${app}-notify-push" --action=restart --wait_until="Push daemon for Nextcloud clients." --log_path="systemd" --action=restart

    if ! exec_occ notify_push:self-test; then
        ynh_print_warn "The Notify Push service is still not working properly. Please log in with a user to your NextCloud instance, restart the Notify Push service with \"systemctl restart ${app}-notify-push.service\", and run \"ynh_exec_as_app php${php_version} $install_dir/occ notify_push:self-test\" to verify that everything is green."
    fi
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Restoration completed for $app"
